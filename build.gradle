import cam72cam.universalmodcore.CurseForge;
import cam72cam.universalmodcore.Util;

buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://teamopenindustry.cc/maven" }
        maven { url = 'https://repo.eclipse.org/content/groups/eclipse' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'cam72cam.universalmodcore:UniversalModCoreGradle:0.1.3'
    }
}

apply plugin: 'forge'

configurations {
    shade
    compile.extendsFrom shade
}

apply plugin: 'maven'

String umcVersion = "1.0.1"
if (!"release".equalsIgnoreCase(System.getProperty("target"))) {
    umcVersion += "-" + Util.GitRevision()
}
version = "1.7.10-forge-" + umcVersion
group = "cam72cam.universalmodcore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "UniversalModCore"

sourceCompatibility = targetCompatibility = 1.8
apply plugin: 'java'

minecraft {
    version = "1.7.10-10.13.4.9999-1.7.10"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_12"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	shade files(CurseForge.asset(223094,2431302))

    testCompile('junit:junit:4.13')

    shade group: 'org.lz4', name: 'lz4-java', version: '1.7.1'
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

test {
    useJUnit()
    maxHeapSize = '1G'
}

task deployJar(type: Jar)

configurations {
    deployerJars
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.9"
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "scp://teamopenindustry.cc/var/www/html/maven/") {
            authentication(userName: "mavenci", privateKey: "publish_key")
        }
    }
}

